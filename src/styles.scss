
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$mwmedsurg-primary: mat.define-palette(mat.$indigo-palette);
$mwmedsurg-accent: mat.define-palette(mat.$pink-palette, A200, A100, A400);

// The warn palette is optional (defaults to red).
$mwmedsurg-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$mwmedsurg-theme: mat.define-light-theme((
  color: (
    primary: $mwmedsurg-primary,
    accent: $mwmedsurg-accent,
    warn: $mwmedsurg-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($mwmedsurg-theme);

/* You can add global styles to this file, and also import other style files */
@tailwind base;
@tailwind components;
@tailwind utilities;


*, *::before, *::after{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

a{
    text-decoration: none;
}

li{
    list-style-type: none;
}


body{
     @apply font-sans bg-white;
}


.slick-dots li button::before{
  content: "";
 font-size: 10px !important;
}

.slick-dots li:hover button::before{
 font-size: 20px !important;
 color: #ef4444cd !important;
}

.slick-dots .slick-active button::before{
 font-size: 20px !important;
   color: #ef4444cd !important;
   color: transparent;
}

.slick-prev::before,
.slick-next::before {
  background-color: #fff !important;
  color: #ef4444cd !important;
  border-radius: 50%;
}

@media(max-width: 640px){
  .slick-prev::before,
.slick-next::before {
  display: none !important;
}
}

/* Define the styles for the scrollbar track and thumb */
/* Define the styles for the scrollbar track and thumb */
/* This will work in some modern browsers (e.g., Chrome) */

/* Track (the background of the scrollbar) */
::-webkit-scrollbar {
  @apply w-2;
}

/* Thumb (the draggable part) */
::-webkit-scrollbar-thumb {
 @apply bg-primary rounded-md transition-all duration-200;
}

/* Handle when the user hovers over the thumb */
::-webkit-scrollbar-thumb:hover {
  @apply bg-primary cursor-grab;
}

/* Track (background of the scrollbar) when not hovering over the thumb */
::-webkit-scrollbar-track {
  background: #f1f1f1;
}

/* Handle when the user hovers over the track */
::-webkit-scrollbar-track:hover {
  background: #ddd;
}

/* Corner (between the vertical and horizontal scrollbars) */
::-webkit-scrollbar-corner {
  background: #f1f1f1;
}
